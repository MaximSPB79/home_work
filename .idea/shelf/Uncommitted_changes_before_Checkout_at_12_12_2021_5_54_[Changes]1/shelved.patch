Index: src/main/java/lesson_3/Lesson_3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package lesson_3;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\nimport org.w3c.dom.ls.LSOutput;\r\n\r\nimport java.util.Arrays;\r\n\r\npublic class Lesson_3 {\r\n    public static void main(String[] args) {\r\n\r\n\r\n        changeNumbers();\r\n        System.out.println();\r\n\r\n        creating100();\r\n        System.out.println();\r\n\r\n        multiplyNumbers();\r\n        System.out.println();\r\n\r\n        makingSquare();\r\n        System.out.println();\r\n\r\n\r\n        System.out.println(Arrays.toString(returnsArray(12, 5)));\r\n        System.out.println();\r\n\r\n        findingMinMaxNumbers();\r\n        System.out.println();\r\n\r\n        int[] mass = {1, 2, 3, 7, 5, 8, 10};\r\n        System.out.println(arrBalance(mass));\r\n        System.out.println();\r\n\r\n\r\n        int[] arr = {1, 2, 3, 4};\r\n        movingArray(arr, 1);\r\n    }\r\n\r\n    private static void changeNumbers() {\r\n        int[] numbers = {1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0,};\r\n        System.out.println(Arrays.toString(numbers));\r\n        System.out.println(\"Меняем нули на единички. Вуаля...\");\r\n        for (int i = 0; i < numbers.length; i++) {\r\n            if (numbers[i] == 1) {\r\n                numbers[i] = 0;\r\n            } else numbers[i] = 1;\r\n        }\r\n        System.out.println(Arrays.toString(numbers));\r\n    }\r\n\r\n    private static void creating100() {\r\n        System.out.println(\"Это просто массив из 100 чисел\");\r\n        int[] weaving = new int[100];\r\n        for (int i = 0; i < weaving.length; i++) {\r\n            weaving[i] = i + 1;\r\n        }\r\n        System.out.println(Arrays.toString(weaving));\r\n    }\r\n\r\n    private static void multiplyNumbers() {\r\n        System.out.println(\"Исходный массив:\");\r\n        int[] nambers = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};\r\n        System.out.println(Arrays.toString(nambers));\r\n        System.out.println(\"Числа, которые меньше 6, умножим на 2:\");\r\n        for (int i = 0; i < nambers.length; i++) {\r\n            if (nambers[i] < 6) {\r\n                nambers[i] = nambers[i] * 2;\r\n            }\r\n        }\r\n        System.out.println(Arrays.toString(nambers));\r\n    }\r\n\r\n\r\n    private static void makingSquare() {\r\n        System.out.println(\"Сделаем диагонали из единичек.\");\r\n        System.out.println();\r\n        int[][] square = new int[8][8];\r\n        for (int i = 0; i < square.length; i++) {\r\n            square[i][i] = 1;\r\n            square[i][square.length - 1 - i] = 1;\r\n        }\r\n        for (int i = 0; i < square.length; i++) {\r\n            for (int j = 0; j < square.length; j++)\r\n                System.out.print(square[i][j] + \"  \");\r\n            System.out.println();\r\n\r\n        }\r\n    }\r\n\r\n    private static int @NotNull [] returnsArray(int len, int initalValue) {\r\n        System.out.println(\"Возвратим массив:\");\r\n        System.out.println();\r\n        int[] arr = new int[len];\r\n        for (int i = 0; i < arr.length; i++) {\r\n            arr[i] = initalValue;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    private static void findingMinMaxNumbers() {\r\n        int[] num = {0, 12, 56, -45, 458, -78, 25, 36, 99};\r\n        int numMax = 0; // Инициализируем переменные, чтобы запустился цикл\r\n        int numMin = 0;\r\n        for (int i = 0; i < num.length; i++) {\r\n            if (num[i] > numMax) {\r\n                numMax = num[i];\r\n            }\r\n            if (num[i] < numMin) {\r\n                numMin = num[i];\r\n            }\r\n        }\r\n        System.out.println(\"Максимальное число в массиве \" + numMax);\r\n        System.out.println(\"Минимальное число в массиве \" + numMin);\r\n    }\r\n\r\n    private static boolean arrBalance(int[] mass) {\r\n        for (int i = 0; i < mass.length; i++) {\r\n            int sum = 0;\r\n            for (int j = 0; j < i; j++) {\r\n                sum = sum + mass[j];\r\n            }\r\n            for (int j = i; j < mass.length; j++) {\r\n                sum = sum - mass[j];\r\n            }\r\n            if (sum == 0)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private static void movingArray(int[] arr, int shift) {\r\n\r\n        int buf = arr[0];\r\n\r\n        for (int i = 0; i < arr.length - 1; i++) {\r\n            arr[i] = arr[i + 1];\r\n        }\r\n        arr[arr.length - 1] = buf;\r\n        System.out.println(Arrays.toString(arr));\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/lesson_3/Lesson_3.java b/src/main/java/lesson_3/Lesson_3.java
--- a/src/main/java/lesson_3/Lesson_3.java	
+++ b/src/main/java/lesson_3/Lesson_3.java	
@@ -8,7 +8,6 @@
 public class Lesson_3 {
     public static void main(String[] args) {
 
-
         changeNumbers();
         System.out.println();
 
@@ -34,7 +33,7 @@
 
 
         int[] arr = {1, 2, 3, 4};
-        movingArray(arr, 1);
+        movingArray(arr, 3);
     }
 
     private static void changeNumbers() {
@@ -130,14 +129,15 @@
     }
 
     private static void movingArray(int[] arr, int shift) {
-
-        int buf = arr[0];
+        for (int n = 0; n < shift; n++) {
+            int buf = arr[0];
 
-        for (int i = 0; i < arr.length - 1; i++) {
-            arr[i] = arr[i + 1];
-        }
-        arr[arr.length - 1] = buf;
-        System.out.println(Arrays.toString(arr));
+            for (int i = 0; i < arr.length - 1; i++) {
+                arr[i] = arr[i + 1];
+            }
+            arr[arr.length - 1] = buf;
+        }
+            System.out.println(Arrays.toString(arr));
 
     }
 }
Index: src/main/java/main/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/main/Main.java b/src/main/java/main/Main.java
--- a/src/main/java/main/Main.java	
+++ b/src/main/java/main/Main.java	
@@ -1,7 +1,120 @@
 package main;
+import java.util.Random;
+import java.util.Scanner;
+import java.util.Arrays;
 
 public class Main {
-    public static void main(String[] args) {
-
-    }
-}
+    public static int SIZE = 3;
+    public static int DOTS_TO_WIN = 3;
+    public static final char DOT_EMPTY = '•';
+    public static final char DOT_X = 'X';
+    public static final char DOT_O = 'O';
+    public static char[][] map;
+    public static Scanner sc = new Scanner(System.in);
+    public static Random rand = new Random();
+
+
+
+
+            public static void main(String[] args) {
+                initMap();
+                printMap();
+                while (true) {
+                    humanTurn();
+                    printMap();
+                    if (checkWin(DOT_X)) {
+                        System.out.println("Победил человек");
+                        break;
+                    }
+                    if (isMapFull()) {
+                        System.out.println("Ничья");
+                        break;
+                    }
+                    aiTurn();
+                    printMap();
+                    if (checkWin(DOT_O)) {
+                        System.out.println("Победил Искуственный Интеллект");
+                        break;
+                    }
+                    if (isMapFull()) {
+                        System.out.println("Ничья");
+                        break;
+                    }
+                }
+                System.out.println("Игра закончена");
+            }
+            public static boolean checkWin(char symb) {
+                if(map[0][0] == symb && map[0][1] == symb && map[0][2] == symb) return true;
+                if(map[1][0] == symb && map[1][1] == symb && map[1][2] == symb) return true;
+                if (map[2][0] == symb && map[2][1] == symb && map[2][2] == symb) return true;
+                if (map[0][0] == symb && map[1][0] == symb && map[2][0] == symb) return true;
+                if (map[0][1] == symb && map[1][1] == symb && map[2][1] == symb) return true;
+                if (map[0][2] == symb && map[1][2] == symb && map[2][2] == symb) return true;
+                if (map[0][0] == symb && map[1][1] == symb && map[2][2] == symb) return true;
+                if (map[2][0] == symb && map[1][1] == symb && map[0][2] == symb) return true;
+                return false;
+            }
+            public static boolean isMapFull() {
+                for (int i = 0; i < SIZE; i++) {
+                    for (int j = 0; j < SIZE; j++) {
+                        if (map[i][j] == DOT_EMPTY) return false;
+                    }
+                }
+                return true;
+            }
+            public static void aiTurn() {
+                int x, y;
+                do {
+                    x = rand.nextInt(SIZE);
+                    y = rand.nextInt(SIZE);
+                } while (!isCellValid(x, y));
+                System.out.println("Компьютер походил в точку " + (x + 1) + " " + (y + 1));
+                map[y][x] = DOT_O;
+            }
+            public static void humanTurn() {
+                int x, y;
+                do {
+                    System.out.println("Введите координаты в формате X Y");
+                    x = sc.nextInt() - 1;
+                    y = sc.nextInt() - 1;
+                } while (!isCellValid(x, y)); // while(isCellValid(x, y) == false)
+                map[y][x] = DOT_X;
+            }
+            public static boolean isCellValid(int x, int y) {
+                if (x < 0 || x >= SIZE || y < 0 || y >= SIZE) return false;
+                if (map[y][x] == DOT_EMPTY) return true;
+                return false;
+            }
+            public static void initMap() {
+                map = new char[SIZE][SIZE];
+                for (int i = 0; i < SIZE; i++) {
+                    for (int j = 0; j < SIZE; j++) {
+                        map[i][j] = DOT_EMPTY;
+                    }
+                }
+            }
+            public static void printMap() {
+                for (int i = 0; i <= SIZE; i++) {
+                    System.out.print(i + " ");
+                }
+                System.out.println();
+                for (int i = 0; i < SIZE; i++) {
+                    System.out.print((i + 1) + " ");
+                    for (int j = 0; j < SIZE; j++) {
+                        System.out.print(map[i][j] + " ");
+                    }
+                    System.out.println();
+                }
+                System.out.println();
+            }
+        }
+
+
+
+
+
+
+
+
+
+
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/workspace.xml	
@@ -0,0 +1,248 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="a32d1bbc-2512-412d-8e10-1b3caefafef2" name="Changes" comment="completed Lesson 4">
+      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/jarRepositories.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]/HomeWorkApp.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]/Lesson2.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]/Lesson_3.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]/Main.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]1/HomeWorkApp.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]1/Lesson2.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]1/Lesson_3.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]1/Main.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]1/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34__Changes_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/gitignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/target/classes/main/Main.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/lesson_3/Lesson_3.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/lesson_3/Lesson_3.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/lesson_5/Employee.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/lesson_5/Employee.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/main/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/main/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/lesson_3/Lesson_3.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/lesson_3/Lesson_3.class" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="lesson_4" />
+      </map>
+    </option>
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="GithubPullRequestsUISettings">
+    <option name="recentNewPullRequestHead">
+      <RepoCoordinatesHolder>
+        <option name="owner" value="MaximSPB79" />
+        <option name="repository" value="home_work" />
+      </RepoCoordinatesHolder>
+    </option>
+  </component>
+  <component name="ProjectId" id="21TQhzrxSMejREKmMDV0aSJMLAZ" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="1" id="Add" />
+  </component>
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent">
+    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
+    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
+    <property name="settings.editor.selected.configurable" value="preferences.lookFeel" />
+  </component>
+  <component name="RecentsManager">
+    <key name="IntroduceConstantDialog.RECENTS_KEY">
+      <recent name="lesson_4.TicTacToe" />
+    </key>
+  </component>
+  <component name="RunManager" selected="Application.Employee">
+    <configuration name="Employee" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="lesson_5.Employee" />
+      <module name="home_work" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="lesson_5.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="HomeWorkApp" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="lesson_1.HomeWorkApp" />
+      <module name="home_work" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="lesson_1.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="Lesson2" type="Application" factoryName="Application" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="lesson_2.Lesson2" />
+      <module name="home_work" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="lesson_2.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="Lesson_3" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="lesson_3.Lesson_3" />
+      <module name="home_work" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="lesson_3.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="Lesson_4" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="lesson_4.Lesson_4" />
+      <module name="home_work" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="lesson_4.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="main.Main" />
+      <module name="home_work" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="main.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Application.Main" />
+        <item itemvalue="Application.Lesson_4" />
+        <item itemvalue="Application.Lesson_3" />
+        <item itemvalue="Application.HomeWorkApp" />
+        <item itemvalue="Application.Employee" />
+      </list>
+    </recent_temporary>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="a32d1bbc-2512-412d-8e10-1b3caefafef2" name="Changes" comment="" />
+      <created>1637962721896</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1637962721896</updated>
+    </task>
+    <task id="LOCAL-00001" summary="completed Lesson one">
+      <created>1637963718616</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1637963718616</updated>
+    </task>
+    <task id="LOCAL-00002" summary="completed Lesson tow">
+      <created>1638229588398</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1638229588398</updated>
+    </task>
+    <task id="LOCAL-00003" summary="completed Lesson tow">
+      <created>1638230903618</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1638230903618</updated>
+    </task>
+    <task id="LOCAL-00004" summary="completed Lesson 3">
+      <created>1638719972242</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1638719972242</updated>
+    </task>
+    <task id="LOCAL-00005" summary="completed Lesson 5">
+      <created>1639255669698</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1639255669698</updated>
+    </task>
+    <task id="LOCAL-00006" summary="completed Lesson 4">
+      <created>1639272701543</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1639272701543</updated>
+    </task>
+    <option name="localTasksCounter" value="7" />
+    <servers />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="oldMeFiltersMigrated" value="true" />
+  </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="completed Lesson one" />
+    <MESSAGE value="completed Lesson tow" />
+    <MESSAGE value="completed Lesson_3" />
+    <MESSAGE value="completed Lesson 3" />
+    <MESSAGE value="completed Lesson 5" />
+    <MESSAGE value="completed Lesson 4" />
+    <option name="LAST_COMMIT_MESSAGE" value="completed Lesson 4" />
+  </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/home_work$Lesson2.ic" NAME="Lesson2 Coverage Results" MODIFIED="1638215975549" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+      <FILTER>lesson_2.*</FILTER>
+    </SUITE>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]/shelved.patch	
@@ -0,0 +1,34 @@
+Index: .idea/.gitignore
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+># Default ignored files\r\n/shelf/\r\n/workspace.xml\r\n.idea/*
+===================================================================
+diff --git a/.idea/.gitignore b/.idea/.gitignore
+--- a/.idea/.gitignore	
++++ b/.idea/.gitignore	
+@@ -1,4 +1,4 @@
+ # Default ignored files
+ /shelf/
+-/workspace.xml
+-.idea/*
+\ No newline at end of file
++*.xml
++.idea/
+\ No newline at end of file
+Index: src/main/java/lesson_2/Lesson2.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package lesson_2;\r\n\r\npublic class Lesson2 {\r\n    public static void main(String[] args) {\r\n        System.out.println(checkingSumNumbers(4, 15));\r\n        determiningSignNumber(-45);\r\n        System.out.println(definitionSign(45));\r\n        printString(\"Второй урок\", 7);\r\n        System.out.println(calculatingLeapYear(1900));\r\n    }\r\n\r\n    public static boolean checkingSumNumbers(int a, int b) {\r\n        int sum = a + b;\r\n        if (sum >= 10 && sum <= 20) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private static void determiningSignNumber(int a) {\r\n        if (a >= 0) {\r\n            System.out.println(\"Число положительное\");\r\n        } else {\r\n            System.out.println(\"Число отрицательное\");\r\n        }\r\n    }\r\n\r\n    private static boolean definitionSign(int x) {\r\n        if (x >= 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static void printString(String b, int a) {\r\n        for (int i = 0; i < a; i++) {\r\n            System.out.println(b);\r\n        }\r\n    }\r\n\r\n    private static boolean calculatingLeapYear(int year) {\r\n        if (year % 400 == 0) {\r\n            return true;\r\n        } else if (year % 100 == 0) {\r\n            return false;\r\n        } else if (year % 4 == 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}
+===================================================================
+diff --git a/src/main/java/lesson_2/Lesson2.java b/src/main/java/lesson_2/Lesson2.java
+--- a/src/main/java/lesson_2/Lesson2.java	
++++ b/src/main/java/lesson_2/Lesson2.java	
+@@ -6,7 +6,7 @@
+         determiningSignNumber(-45);
+         System.out.println(definitionSign(45));
+         printString("Второй урок", 7);
+-        System.out.println(calculatingLeapYear(1900));
++        System.out.println(calculatingLeapYear(2020));
+     }
+ 
+     public static boolean checkingSumNumbers(int a, int b) {
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/jarRepositories.xml	
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]1/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]1/shelved.patch
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]1/shelved.patch	
@@ -0,0 +1,341 @@
+Index: src/main/java/main/Main.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package main;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/main/Main.java b/src/main/java/main/Main.java
+--- a/src/main/java/main/Main.java	
++++ b/src/main/java/main/Main.java	
+@@ -1,7 +1,28 @@
+ package main;
+ 
++import java.util.Arrays;
++
+ public class Main {
+     public static void main(String[] args) {
+ 
++        max();
++
+     }
++
++    private static void max() {
++        int[] arr = {1, 2, 3, 4};
++        int[] arr0 = new int[4];
++        for (int i = 0; i < arr.length; i++) {
++            arr0[i] = arr[arr.length - i];
++//        arr0[1] = arr[2];
++//        arr0[2] = arr[1];
++//        arr0[3] = arr[0];
++
++
++            System.out.println(Arrays.toString(arr0));
++        }
++    }
++
++
+ }
++
+Index: src/main/java/lesson_3/Lesson_3.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/lesson_3/Lesson_3.java b/src/main/java/lesson_3/Lesson_3.java
+new file mode 100644
+--- /dev/null	
++++ b/src/main/java/lesson_3/Lesson_3.java	
+@@ -0,0 +1,146 @@
++package lesson_3;
++
++import org.jetbrains.annotations.NotNull;
++import org.w3c.dom.ls.LSOutput;
++
++import java.util.Arrays;
++
++public class Lesson_3 {
++    public static void main(String[] args) {
++
++
++        changeNumbers();
++        System.out.println();
++
++        creating100();
++        System.out.println();
++
++        multiplyNumbers();
++        System.out.println();
++
++        makingSquare();
++        System.out.println();
++
++
++        System.out.println(Arrays.toString(returnsArray(12, 5)));
++        System.out.println();
++
++        findingMinMaxNumbers();
++        System.out.println();
++
++        int[] mass = {1, 2, 3, 7, 5, 8, 10};
++        System.out.println(arrBalance(mass));
++        System.out.println();
++
++
++        int[] arr = {1, 2, 3, 4};
++        movingArray(arr, 1);
++    }
++
++    private static void changeNumbers() {
++        int[] numbers = {1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0,};
++        System.out.println(Arrays.toString(numbers));
++        System.out.println("Меняем нули на единички. Вуаля...");
++        for (int i = 0; i < numbers.length; i++) {
++            if (numbers[i] == 1) {
++                numbers[i] = 0;
++            } else numbers[i] = 1;
++        }
++        System.out.println(Arrays.toString(numbers));
++    }
++
++    private static void creating100() {
++        System.out.println("Это просто массив из 100 чисел");
++        int[] weaving = new int[100];
++        for (int i = 0; i < weaving.length; i++) {
++            weaving[i] = i + 1;
++        }
++        System.out.println(Arrays.toString(weaving));
++    }
++
++    private static void multiplyNumbers() {
++        System.out.println("Исходный массив:");
++        int[] nambers = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};
++        System.out.println(Arrays.toString(nambers));
++        System.out.println("Числа, которые меньше 6, умножим на 2:");
++        for (int i = 0; i < nambers.length; i++) {
++            if (nambers[i] < 6) {
++                nambers[i] = nambers[i] * 2;
++            }
++        }
++        System.out.println(Arrays.toString(nambers));
++    }
++
++
++    private static void makingSquare() {
++        System.out.println("Сделаем диагонали из единичек.");
++        System.out.println();
++        int[][] square = new int[8][8];
++        for (int i = 0; i < square.length; i++) {
++            square[i][i] = 1;
++            square[i][square.length - 1 - i] = 1;
++        }
++        for (int i = 0; i < square.length; i++) {
++            for (int j = 0; j < square.length; j++)
++                System.out.print(square[i][j] + "  ");
++            System.out.println();
++
++        }
++    }
++
++    private static int @NotNull [] returnsArray(int len, int initalValue) {
++        System.out.println("Возвратим массив:");
++        System.out.println();
++        int[] arr = new int[len];
++        for (int i = 0; i < arr.length; i++) {
++            arr[i] = initalValue;
++        }
++        return arr;
++    }
++
++    private static void findingMinMaxNumbers() {
++        int[] num = {0, 12, 56, -45, 458, -78, 25, 36, 99};
++        int numMax = 0; // Инициализируем переменные, чтобы запустился цикл
++        int numMin = 0;
++        for (int i = 0; i < num.length; i++) {
++            if (num[i] > numMax) {
++                numMax = num[i];
++            }
++            if (num[i] < numMin) {
++                numMin = num[i];
++            }
++        }
++        System.out.println("Максимальное число в массиве " + numMax);
++        System.out.println("Минимальное число в массиве " + numMin);
++    }
++
++    private static boolean arrBalance(int[] mass) {
++        for (int i = 0; i < mass.length; i++) {
++            int sum = 0;
++            for (int j = 0; j < i; j++) {
++                sum = sum + mass[j];
++            }
++            for (int j = i; j < mass.length; j++) {
++                sum = sum - mass[j];
++            }
++            if (sum == 0)
++                return true;
++        }
++        return false;
++    }
++
++    private static void movingArray(int[] arr, int shift) {
++
++        int buf = arr[0];
++
++        for (int i = 0; i < arr.length - 1; i++) {
++            arr[i] = arr[i + 1];
++        }
++        arr[arr.length - 1] = buf;
++        System.out.println(Arrays.toString(arr));
++
++    }
++}
++
++
++
+Index: .idea/jarRepositories.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
+new file mode 100644
+--- /dev/null	
++++ b/.idea/jarRepositories.xml	
+@@ -0,0 +1,20 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="RemoteRepositoriesConfiguration">
++    <remote-repository>
++      <option name="id" value="central" />
++      <option name="name" value="Central Repository" />
++      <option name="url" value="https://repo.maven.apache.org/maven2" />
++    </remote-repository>
++    <remote-repository>
++      <option name="id" value="central" />
++      <option name="name" value="Maven Central repository" />
++      <option name="url" value="https://repo1.maven.org/maven2" />
++    </remote-repository>
++    <remote-repository>
++      <option name="id" value="jboss.community" />
++      <option name="name" value="JBoss Community repository" />
++      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
++    </remote-repository>
++  </component>
++</project>
+\ No newline at end of file
+Index: .idea/compiler.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/compiler.xml b/.idea/compiler.xml
+new file mode 100644
+--- /dev/null	
++++ b/.idea/compiler.xml	
+@@ -0,0 +1,13 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="CompilerConfiguration">
++    <annotationProcessing>
++      <profile name="Maven default annotation processors profile" enabled="true">
++        <sourceOutputDir name="target/generated-sources/annotations" />
++        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
++        <outputRelativeToContentRoot value="true" />
++        <module name="home_work" />
++      </profile>
++    </annotationProcessing>
++  </component>
++</project>
+\ No newline at end of file
+Index: .idea/misc.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/.idea/misc.xml b/.idea/misc.xml
+new file mode 100644
+--- /dev/null	
++++ b/.idea/misc.xml	
+@@ -0,0 +1,14 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="ExternalStorageConfigurationManager" enabled="true" />
++  <component name="MavenProjectsManager">
++    <option name="originalFiles">
++      <list>
++        <option value="$PROJECT_DIR$/pom.xml" />
++      </list>
++    </option>
++  </component>
++  <component name="ProjectRootManager" version="2" languageLevel="JDK_16" project-jdk-name="17" project-jdk-type="JavaSDK">
++    <output url="file://$PROJECT_DIR$/out" />
++  </component>
++</project>
+\ No newline at end of file
+Index: gitignore
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/gitignore b/gitignore
+new file mode 100644
+--- /dev/null	
++++ b/gitignore	
+@@ -0,0 +1,2 @@
++.idea/
++*.xml
+\ No newline at end of file
+Index: pom.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/pom.xml b/pom.xml
+new file mode 100644
+--- /dev/null	
++++ b/pom.xml	
+@@ -0,0 +1,42 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project xmlns="http://maven.apache.org/POM/4.0.0"
++         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
++         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
++    <modelVersion>4.0.0</modelVersion>
++
++    <groupId>org.example</groupId>
++    <artifactId>home_work</artifactId>
++    <version>1.0-SNAPSHOT</version>
++    <build>
++        <plugins>
++            <plugin>
++                <groupId>org.apache.maven.plugins</groupId>
++                <artifactId>maven-compiler-plugin</artifactId>
++                <configuration>
++                    <source>16</source>
++                    <target>16</target>
++                </configuration>
++            </plugin>
++        </plugins>
++    </build>
++    <dependencies>
++        <dependency>
++            <groupId>org.jetbrains</groupId>
++            <artifactId>annotations</artifactId>
++            <version>RELEASE</version>
++            <scope>compile</scope>
++        </dependency>
++        <dependency>
++            <groupId>org.jetbrains</groupId>
++            <artifactId>annotations</artifactId>
++            <version>RELEASE</version>
++            <scope>compile</scope>
++        </dependency>
++    </dependencies>
++
++    <properties>
++        <maven.compiler.source>17</maven.compiler.source>
++        <maven.compiler.target>17</maven.compiler.target>
++    </properties>
++
++</project>
+\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
new file mode 100644
--- /dev/null	
+++ b/pom.xml	
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>org.example</groupId>
+    <artifactId>home_work</artifactId>
+    <version>1.0-SNAPSHOT</version>
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>16</source>
+                    <target>16</target>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+    <dependencies>
+        <dependency>
+            <groupId>org.jetbrains</groupId>
+            <artifactId>annotations</artifactId>
+            <version>RELEASE</version>
+            <scope>compile</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.jetbrains</groupId>
+            <artifactId>annotations</artifactId>
+            <version>RELEASE</version>
+            <scope>compile</scope>
+        </dependency>
+    </dependencies>
+
+    <properties>
+        <maven.compiler.source>17</maven.compiler.source>
+        <maven.compiler.target>17</maven.compiler.target>
+    </properties>
+
+</project>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34__Changes_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34__Changes_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34__Changes_1.xml	
@@ -0,0 +1,24 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]1" date="1638718480790" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]1/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 05.12.2021 18:34 [Changes]" />
+  <binary>
+    <option name="BEFORE_PATH" />
+    <option name="AFTER_PATH" value="target/classes/main/Main.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]1/Main.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" />
+    <option name="AFTER_PATH" value="target/classes/lesson_3/Lesson_3.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]1/Lesson_3.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" value="target/classes/lesson_2/Lesson2.class" />
+    <option name="AFTER_PATH" value="target/classes/lesson_2/Lesson2.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]1/Lesson2.class" />
+  </binary>
+  <binary>
+    <option name="BEFORE_PATH" />
+    <option name="AFTER_PATH" value="target/classes/lesson_1/HomeWorkApp.class" />
+    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]1/HomeWorkApp.class" />
+  </binary>
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34__Changes_.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34__Changes_.xml	
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]" date="1638718472482" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_05_12_2021_18_34_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 05.12.2021 18:34 [Changes]" />
+</changelist>
\ No newline at end of file
Index: gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gitignore b/gitignore
new file mode 100644
--- /dev/null	
+++ b/gitignore	
@@ -0,0 +1,2 @@
+.idea/
+*.xml
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/compiler.xml	
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="home_work" />
+      </profile>
+    </annotationProcessing>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/misc.xml	
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_16" project-jdk-name="17" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
